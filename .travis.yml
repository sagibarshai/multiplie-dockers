sudo: required # because docker in use
services:
  - docker

env:
  global:
    - SHA=$(git rev-parse-HEAD) # get the current git commit id (version) (used inside the deploy.sh)
    - CLOUDSDK_CORE_DISABLE_PROMPTS=1 # config google cloud cli to not ask for user input promotes

before_install:
  # load the encrypted file (insert by travis cli) into this process
  - openssl aes-256-cbc -K $encrypted_9f3b5599b056_key -iv $encrypted_9f3b5599b056_iv -in service-account.json.enc -out service-account.json -d
  

  - if [ ! -d $HOME/google-cloud-sdk/bin ]; then
    rm -rf $HOME/google-cloud-sdk;
    curl https://sdk.cloud.google.com | bash > /dev/null;
  fi

  
  # download google cloud sdk
  - curl https://sdk.cloud.google.com | bash > /dev/null;
  
  # add the gcloud env keyword to the process
  - source $HOME/google-cloud-sdk/path.bash.inc
 
  # add kubectl cli for this process
  - gcloud component update kubectl
  
  # authenticate to gcloud (get the file key from IAM console) via the encrypted file (service-account.json)
  - gcloud auth activate-service-account --key-file service-account.json

  # select the project that we want to work on (by the id attached to this project name)
  - gcloud config set project valued-road-417513

  # set the region (zone) (take from g-cloud console at kubernetes engine) 
  - gcloud config set compute/zone europe-west1-c

  # set the cluster name
  - gcloud container clusters get-credentials multi-k8s-cluster

  - echo "$DOCKER_PASSWORD" | docker login --username $DOCKER_ID --password-stdin


  # build dev for client
  - docker build -f ./client/Dockerfile.dev -t 315426346/client-test:latest ./client

script:
  # test the dev version for client
  - docker run -e CI=true 315426346/client-test npm run test
  
  

deploy:
  provider: script #manual
  script: bash ./deploy.sh # the file that hold the script
  on:
    branch: main
   